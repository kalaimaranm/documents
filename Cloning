The process of creating exactly duplicate object is called cloning
The main purpose of cloning is to maintain back copy and to preserve state of an object 
we can perform cloning by using clone() method of Object class 
     
        protected native Object clone() throws cloneNotSupportedException
        
        
 public class Main implements Cloneable {   // RE 
 int num;
 int num2;
 Main(int num, int num2){
 this.num=num;
 this.num2=num2;
 }
 public static void main(String args[]) throws CloneNotSupportedException{  //CE
 Main m = new Main(10,100);
 Main m2 = (Main)m.clone();                                                 //CE
 }
 }
 
 we can perform cloning only for cloneable objects. when object is said to be cloneable if an only if corresponding implements Cloneable interface
 Cloneable interface present in java.lang package and it does not contains any methods(It is called Marker Interface).
 
 If we are trying to perform cloning non-cloneable objects then we will get R.E. CloneNotSupportedException  
 
 There are two different type of cloning 
     1.Shallow cloning(Object-cone()) - The process of creating bit wise copy of an object is called is called shallow cloning. If the main object contains primitive variables then exactly duplicate copy will be created in the cloned object. If the main object contains any reference variable then corresponding object won't be created just duplicate reference variable will be created pointing to old contained object. Object Class clone() method ment for shallow cloning.
     1.1. In shallow cloning by using clonned object reference if we perform any change to the contained object then those changes will be reflected to the main object 
     1.2. to over come this problem we should go for deep cloning  
     2.Deep cloning - The process of creating exactly duplicate independent copy including contained object is called deep cloning 
     2.1 In deep cloning id the main object contains any primitive variable in the cloned object duplicate object duplicate copy will be created 
     2.2 If the main object contains any reference variable then corresponding contained object will be created in the clonned copy 
     2.3 By default Object class clone method ment for shallow cloning but we can implement deep cloning explicitly by overriding clone method in our class
      
